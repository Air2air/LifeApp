{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Animatable from 'react-native-animatable';\nimport { Button } from \"../../Button\";\nimport { useFonts } from 'expo-font';\nimport Waveform2 from \"../../../../assets/images/js/Waveform2.js\";\nimport cardStyles from \"../cardStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar styles = cardStyles;\nvar description = 'You are currently on Waveform A';\nvar buttonText = 'Skip to B';\nvar link = 'Skip to B';\nexport var CardWaveform2 = function CardWaveform2(_ref) {\n  var size = _ref.size;\n\n  var _useFonts = useFonts({\n    ObjektivRegular: require(\"./../../../../assets/fonts/ObjektivMk2-Regular.ttf\"),\n    ObjektivBold: require(\"./../../../../assets/fonts/ObjektivMk2-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return _jsx(_Fragment, {\n    children: size === 'tall' ? _jsx(View, {\n      style: styles.cardWrapperTall,\n      children: _jsxs(View, {\n        style: styles.cardInner,\n        children: [_jsx(Animatable.View, {\n          animation: \"fadeIn\",\n          delay: Animations.SPEED_MED,\n          duration: Animations.SPEED_XSLOW,\n          style: styles.imageWrapper,\n          children: _jsx(Waveform2, {\n            style: styles.image\n          })\n        }), _jsx(Animatable.Text, {\n          animation: \"fadeInDown\",\n          delay: Animations.SPEED_FAST,\n          duration: Animations.SPEED_FAST,\n          style: styles.description,\n          children: description\n        }), _jsx(Animatable.View, {\n          animation: \"fadeInUp\",\n          delay: Animations.SPEED_MED,\n          duration: Animations.SPEED_FAST,\n          children: _jsx(Button, {\n            buttonText: buttonText,\n            type: \"outline\",\n            onPress: link\n          })\n        })]\n      })\n    }) : _jsx(View, {\n      style: styles.cardWrapperShort,\n      children: _jsxs(View, {\n        style: styles.cardInner,\n        children: [_jsxs(View, {\n          style: styles.shortView,\n          children: [_jsx(Animatable.View, {\n            animation: \"fadeIn\",\n            delay: Animations.SPEED_MED,\n            duration: Animations.SPEED_XSLOW,\n            style: styles.imageWrapperShort,\n            children: _jsx(Waveform2, {\n              style: styles.imageShort\n            })\n          }), _jsx(Animatable.Text, {\n            animation: \"fadeInDown\",\n            delay: Animations.SPEED_FAST,\n            duration: Animations.SPEED_FAST,\n            style: styles.descriptionShort,\n            children: description\n          })]\n        }), _jsx(Animatable.View, {\n          animation: \"fadeInUp\",\n          delay: Animations.SPEED_MED,\n          duration: Animations.SPEED_FAST,\n          children: _jsx(Button, {\n            buttonText: buttonText,\n            type: \"outline\",\n            onPress: link\n          })\n        })]\n      })\n    })\n  });\n};","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Card/CardWaveform2/CardWaveform2.js"],"names":["Animatable","Button","useFonts","Waveform2","cardStyles","styles","description","buttonText","link","CardWaveform2","size","ObjektivRegular","require","ObjektivBold","loaded","cardWrapperTall","cardInner","Animations","SPEED_MED","SPEED_XSLOW","imageWrapper","image","SPEED_FAST","cardWrapperShort","shortView","imageWrapperShort","imageShort","descriptionShort"],"mappings":"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","sourcesContent":["import { View, Image } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { Button } from '../../Button';\nimport { useFonts } from 'expo-font';\nimport Waveform2 from '../../../../assets/images/js/Waveform2.js';\nimport cardStyles from '../cardStyles';\nconst styles = cardStyles;\n\nconst description = 'You are currently on Waveform A';\n//const image = <Illustration_08 style={styles.image} />;\nconst buttonText = 'Skip to B';\nconst link = 'Skip to B';\n\nexport const CardWaveform2 = ({size}) => {\n  const [loaded] = useFonts({\n    ObjektivRegular: require('./../../../../assets/fonts/ObjektivMk2-Regular.ttf'),\n    ObjektivBold: require('./../../../../assets/fonts/ObjektivMk2-Bold.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <>\n      {size === 'tall' ? (\n        <View style={styles.cardWrapperTall}>\n          <View style={styles.cardInner}>\n            <Animatable.View\n              animation=\"fadeIn\"\n              delay={Animations.SPEED_MED}\n              duration={Animations.SPEED_XSLOW}\n              style={styles.imageWrapper}\n            >\n              {/* <Image style={styles.image} source={image} /> */}\n              <Waveform2 style={styles.image} />\n            </Animatable.View>\n            <Animatable.Text\n              animation=\"fadeInDown\"\n              delay={Animations.SPEED_FAST}\n              duration={Animations.SPEED_FAST}\n              style={styles.description}\n            >\n              {description}\n            </Animatable.Text>\n            <Animatable.View\n              animation=\"fadeInUp\"\n              delay={Animations.SPEED_MED}\n              duration={Animations.SPEED_FAST}\n            >\n              <Button buttonText={buttonText} type=\"outline\" onPress={link} />\n            </Animatable.View>\n          </View>\n        </View>\n      ) : (\n        <View style={styles.cardWrapperShort}>\n          <View style={styles.cardInner}>\n            <View style={styles.shortView}>\n              <Animatable.View\n                animation=\"fadeIn\"\n                delay={Animations.SPEED_MED}\n                duration={Animations.SPEED_XSLOW}\n                style={styles.imageWrapperShort}\n              >\n                {/* <Image style={styles.imageShort} source={image} /> */}\n                <Waveform2 style={styles.imageShort} />\n              </Animatable.View>\n              <Animatable.Text\n                animation=\"fadeInDown\"\n                delay={Animations.SPEED_FAST}\n                duration={Animations.SPEED_FAST}\n                style={styles.descriptionShort}\n              >\n                {description}\n              </Animatable.Text>\n            </View>\n            <Animatable.View\n              animation=\"fadeInUp\"\n              delay={Animations.SPEED_MED}\n              duration={Animations.SPEED_FAST}\n            >\n              <Button buttonText={buttonText} type=\"outline\" onPress={link} />\n            </Animatable.View>\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}