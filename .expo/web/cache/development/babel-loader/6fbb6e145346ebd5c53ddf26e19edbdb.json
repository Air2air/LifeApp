{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { VictoryAxis, VictoryChart, VictoryGroup, VictoryLabel, VictoryLegend, VictoryLine, VictoryScatter } from 'victory-native';\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar prevTherapy = [{\n  x: '1',\n  y: 1.1251\n}, {\n  x: '2',\n  y: 4.32332\n}, {\n  x: '3',\n  y: 3.87543\n}, {\n  x: '4',\n  y: 1.1251\n}, {\n  x: '5',\n  y: 2.123241\n}, {\n  x: '6',\n  y: 3.5231\n}];\nvar postTherapy = [{\n  x: '1',\n  y: 3.12451\n}, {\n  x: '2',\n  y: 3.5231\n}, {\n  x: '3',\n  y: 4.54332\n}, {\n  x: '4',\n  y: 2.125642\n}, {\n  x: '5',\n  y: 3.12451\n}, {\n  x: '6',\n  y: 3.1234\n}];\nvar tickValues = ['1', '2', '3', '4', '5', '6'];\nvar dataHigh = 4;\nvar dataMedium = 2;\nvar floor = 1;\nvar ceil = 5;\nexport var ChartTherapyProgress = function ChartTherapyProgress() {\n  var _useFonts = useFonts({\n    ObjektivBold: require(\"./../../../assets/fonts/ObjektivMk2-Bold.ttf\"),\n    ObjektivMedium: require(\"./../../../assets/fonts/ObjektivMk2-Medium.ttf\"),\n    ObjektivRegular: require(\"./../../../assets/fonts/ObjektivMk2-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.chartContainer,\n      children: _jsxs(VictoryChart, {\n        height: 230,\n        width: 350,\n        minDomain: {\n          y: floor,\n          x: 1\n        },\n        maxDomain: {\n          y: ceil\n        },\n        padding: {\n          top: 40,\n          bottom: 30,\n          left: 10,\n          right: 10\n        },\n        children: [_jsx(VictoryLegend, {\n          x: 56,\n          y: 0,\n          centerTitle: true,\n          orientation: \"horizontal\",\n          gutter: 20,\n          size: 4,\n          style: {\n            labels: {\n              fontSize: 16\n            }\n          },\n          data: [{\n            name: 'Pre-therapy',\n            symbol: {\n              fill: 'white',\n              stroke: prevTherapyColor,\n              strokeWidth: 3\n            }\n          }, {\n            name: 'Post-therapy',\n            symbol: {\n              fill: 'white',\n              stroke: postTherapyColor,\n              strokeWidth: 3\n            }\n          }]\n        }), _jsx(VictoryAxis, {\n          tickValues: tickValues,\n          tickLabelComponent: _jsx(VictoryLabel, {}),\n          style: {\n            grid: {\n              stroke: Colors.LIGHT_GRAY,\n              strokeWidth: 2\n            },\n            axis: {\n              stroke: '#FFF',\n              strokeWidth: 2\n            },\n            labels: {\n              fontFamily: Fonts.FONT_FACE_MEDIUM,\n              fontSize: fontSize\n            }\n          }\n        }), _jsxs(VictoryGroup, {\n          children: [_jsx(VictoryLine, {\n            data: prevTherapy,\n            style: {\n              data: {\n                stroke: prevTherapyColor,\n                strokeWidth: 3\n              }\n            },\n            interpolation: \"linear\",\n            animate: {\n              delay: 500,\n              duration: 500\n            }\n          }), _jsx(VictoryScatter, {\n            size: 4,\n            data: prevTherapy,\n            style: {\n              data: {\n                fill: 'white',\n                stroke: prevTherapyColor,\n                strokeWidth: 3\n              }\n            },\n            animate: {\n              delay: 500,\n              duration: 500\n            }\n          })]\n        }), _jsxs(VictoryGroup, {\n          children: [_jsx(VictoryLine, {\n            data: postTherapy,\n            style: {\n              data: {\n                stroke: postTherapyColor,\n                strokeWidth: 3\n              }\n            },\n            interpolation: \"linear\",\n            animate: {\n              delay: 0,\n              duration: 500\n            }\n          }), _jsx(VictoryScatter, {\n            size: 4,\n            data: postTherapy,\n            style: {\n              data: {\n                fill: 'white',\n                stroke: postTherapyColor,\n                strokeWidth: 3\n              }\n            },\n            animate: {\n              delay: 1000,\n              duration: 500\n            }\n          })]\n        })]\n      })\n    })\n  });\n};\nvar highColor = 'red';\nvar lowColor = Colors.NAVY;\nvar prevTherapyColor = Colors.LOGO_BLUE;\nvar postTherapyColor = Colors.GREEN;\nvar fontSize = 18;\nvar styles = StyleSheet.create({\n  chartContainer: {\n    flex: 1,\n    paddingVertical: 30,\n    width: '100%',\n    backgroundColor: Colors.WHITE\n  }\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Chart/ChartTherapyProgress.js"],"names":["VictoryAxis","VictoryChart","VictoryGroup","VictoryLabel","VictoryLegend","VictoryLine","VictoryScatter","useFonts","prevTherapy","x","y","postTherapy","tickValues","dataHigh","dataMedium","floor","ceil","ChartTherapyProgress","ObjektivBold","require","ObjektivMedium","ObjektivRegular","loaded","styles","chartContainer","top","bottom","left","right","labels","fontSize","name","symbol","fill","stroke","prevTherapyColor","strokeWidth","postTherapyColor","grid","Colors","LIGHT_GRAY","axis","fontFamily","Fonts","FONT_FACE_MEDIUM","data","delay","duration","highColor","lowColor","NAVY","LOGO_BLUE","GREEN","StyleSheet","create","flex","paddingVertical","width","backgroundColor","WHITE"],"mappings":";;;AACA,SACEA,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,cAPF,QAQO,gBARP;AAUA,SAASC,QAAT,QAAyB,WAAzB;;;;AAEA,IAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CADkB,EAElB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAFkB,EAGlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAHkB,EAIlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAJkB,EAKlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CALkB,EAMlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CANkB,CAApB;AASA,IAAMC,WAAW,GAAG,CAClB;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CADkB,EAElB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAFkB,EAGlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAHkB,EAIlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CAJkB,EAKlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CALkB,EAMlB;AAAED,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE;AAAb,CANkB,CAApB;AASA,IAAME,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAnB;AAEA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,KAAK,GAAG,CAAd;AACA,IAAMC,IAAI,GAAG,CAAb;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxC,kBAAiBV,QAAQ,CAAC;AACxBW,IAAAA,YAAY,EAAEC,OAAO,gDADG;AAExBC,IAAAA,cAAc,EAAED,OAAO,kDAFC;AAGxBE,IAAAA,eAAe,EAAEF,OAAO;AAHA,GAAD,CAAzB;AAAA;AAAA,MAAOG,MAAP;;AAMA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,SACE;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA,gBACE,MAAC,YAAD;AACE,QAAA,MAAM,EAAE,GADV;AAEE,QAAA,KAAK,EAAE,GAFT;AAGE,QAAA,SAAS,EAAE;AAAEd,UAAAA,CAAC,EAAEK,KAAL;AAAYN,UAAAA,CAAC,EAAE;AAAf,SAHb;AAIE,QAAA,SAAS,EAAE;AAAEC,UAAAA,CAAC,EAAEM;AAAL,SAJb;AAKE,QAAA,OAAO,EAAE;AAAES,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,MAAM,EAAE,EAAnB;AAAuBC,UAAAA,IAAI,EAAE,EAA7B;AAAiCC,UAAAA,KAAK,EAAE;AAAxC,SALX;AAAA,mBAOE,KAAC,aAAD;AACE,UAAA,CAAC,EAAE,EADL;AAEE,UAAA,CAAC,EAAE,CAFL;AAGE,UAAA,WAAW,MAHb;AAIE,UAAA,WAAW,EAAC,YAJd;AAKE,UAAA,MAAM,EAAE,EALV;AAME,UAAA,IAAI,EAAE,CANR;AAOE,UAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE;AACNC,cAAAA,QAAQ,EAAE;AADJ;AADH,WAPT;AAYE,UAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,IAAI,EAAE,aADR;AAEEC,YAAAA,MAAM,EAAE;AACNC,cAAAA,IAAI,EAAE,OADA;AAENC,cAAAA,MAAM,EAAEC,gBAFF;AAGNC,cAAAA,WAAW,EAAE;AAHP;AAFV,WADI,EASJ;AACEL,YAAAA,IAAI,EAAE,cADR;AAEEC,YAAAA,MAAM,EAAE;AACNC,cAAAA,IAAI,EAAE,OADA;AAENC,cAAAA,MAAM,EAAEG,gBAFF;AAGND,cAAAA,WAAW,EAAE;AAHP;AAFV,WATI;AAZR,UAPF,EAsCE,KAAC,WAAD;AACE,UAAA,UAAU,EAAExB,UADd;AAEE,UAAA,kBAAkB,EAAE,KAAC,YAAD,KAFtB;AAGE,UAAA,KAAK,EAAE;AACL0B,YAAAA,IAAI,EAAE;AACJJ,cAAAA,MAAM,EAAEK,MAAM,CAACC,UADX;AAEJJ,cAAAA,WAAW,EAAE;AAFT,aADD;AAKLK,YAAAA,IAAI,EAAE;AAAEP,cAAAA,MAAM,EAAE,MAAV;AAAkBE,cAAAA,WAAW,EAAE;AAA/B,aALD;AAMLP,YAAAA,MAAM,EAAE;AACNa,cAAAA,UAAU,EAAEC,KAAK,CAACC,gBADZ;AAENd,cAAAA,QAAQ,EAAEA;AAFJ;AANH;AAHT,UAtCF,EAwDE,MAAC,YAAD;AAAA,qBACE,KAAC,WAAD;AACE,YAAA,IAAI,EAAEtB,WADR;AAEE,YAAA,KAAK,EAAE;AAAEqC,cAAAA,IAAI,EAAE;AAAEX,gBAAAA,MAAM,EAAEC,gBAAV;AAA4BC,gBAAAA,WAAW,EAAE;AAAzC;AAAR,aAFT;AAGE,YAAA,aAAa,EAAC,QAHhB;AAIE,YAAA,OAAO,EAAE;AAAEU,cAAAA,KAAK,EAAE,GAAT;AAAcC,cAAAA,QAAQ,EAAE;AAAxB;AAJX,YADF,EAOE,KAAC,cAAD;AACE,YAAA,IAAI,EAAE,CADR;AAEE,YAAA,IAAI,EAAEvC,WAFR;AAGE,YAAA,KAAK,EAAE;AACLqC,cAAAA,IAAI,EAAE;AACJZ,gBAAAA,IAAI,EAAE,OADF;AAEJC,gBAAAA,MAAM,EAAEC,gBAFJ;AAGJC,gBAAAA,WAAW,EAAE;AAHT;AADD,aAHT;AAUE,YAAA,OAAO,EAAE;AAAEU,cAAAA,KAAK,EAAE,GAAT;AAAcC,cAAAA,QAAQ,EAAE;AAAxB;AAVX,YAPF;AAAA,UAxDF,EA6EE,MAAC,YAAD;AAAA,qBACE,KAAC,WAAD;AACE,YAAA,IAAI,EAAEpC,WADR;AAEE,YAAA,KAAK,EAAE;AAAEkC,cAAAA,IAAI,EAAE;AAAEX,gBAAAA,MAAM,EAAEG,gBAAV;AAA4BD,gBAAAA,WAAW,EAAE;AAAzC;AAAR,aAFT;AAGE,YAAA,aAAa,EAAC,QAHhB;AAIE,YAAA,OAAO,EAAE;AAAEU,cAAAA,KAAK,EAAE,CAAT;AAAYC,cAAAA,QAAQ,EAAE;AAAtB;AAJX,YADF,EAOE,KAAC,cAAD;AACE,YAAA,IAAI,EAAE,CADR;AAEE,YAAA,IAAI,EAAEpC,WAFR;AAGE,YAAA,KAAK,EAAE;AACLkC,cAAAA,IAAI,EAAE;AACJZ,gBAAAA,IAAI,EAAE,OADF;AAEJC,gBAAAA,MAAM,EAAEG,gBAFJ;AAGJD,gBAAAA,WAAW,EAAE;AAHT;AADD,aAHT;AAUE,YAAA,OAAO,EAAE;AAAEU,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,QAAQ,EAAE;AAAzB;AAVX,YAPF;AAAA,UA7EF;AAAA;AADF;AADF,IADF;AAwGD,CAnHM;AAqHP,IAAMC,SAAS,GAAG,KAAlB;AACA,IAAMC,QAAQ,GAAGV,MAAM,CAACW,IAAxB;AACA,IAAMf,gBAAgB,GAAGI,MAAM,CAACY,SAAhC;AACA,IAAMd,gBAAgB,GAAGE,MAAM,CAACa,KAAhC;AACA,IAAMtB,QAAQ,GAAG,EAAjB;AAGA,IAAMP,MAAM,GAAG8B,UAAU,CAACC,MAAX,CAAkB;AAC/B9B,EAAAA,cAAc,EAAE;AACd+B,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,eAAe,EAAE,EAFH;AAGdC,IAAAA,KAAK,EAAE,MAHO;AAIdC,IAAAA,eAAe,EAAEnB,MAAM,CAACoB;AAJV;AADe,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport {\n  VictoryAxis,\n  VictoryChart,\n  VictoryGroup,\n  VictoryLabel,\n  VictoryLegend,\n  VictoryLine,\n  VictoryScatter,\n} from 'victory-native';\n\nimport { useFonts } from 'expo-font';\n\nconst prevTherapy = [\n  { x: '1', y: 1.1251 },\n  { x: '2', y: 4.32332 },\n  { x: '3', y: 3.87543 },\n  { x: '4', y: 1.1251 },\n  { x: '5', y: 2.123241 },\n  { x: '6', y: 3.5231 },\n];\n\nconst postTherapy = [\n  { x: '1', y: 3.12451 },\n  { x: '2', y: 3.5231 },\n  { x: '3', y: 4.54332 },\n  { x: '4', y: 2.125642 },\n  { x: '5', y: 3.12451 },\n  { x: '6', y: 3.1234 },\n];\n\nconst tickValues = ['1', '2', '3', '4', '5', '6'];\n\nconst dataHigh = 4;\nconst dataMedium = 2;\nconst floor = 1;\nconst ceil = 5;\n\nexport const ChartTherapyProgress = () => {\n  const [loaded] = useFonts({\n    ObjektivBold: require('./../../../assets/fonts/ObjektivMk2-Bold.ttf'),\n    ObjektivMedium: require('./../../../assets/fonts/ObjektivMk2-Medium.ttf'),\n    ObjektivRegular: require('./../../../assets/fonts/ObjektivMk2-Regular.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={styles.chartContainer}>\n        <VictoryChart\n          height={230}\n          width={350}\n          minDomain={{ y: floor, x: 1 }}\n          maxDomain={{ y: ceil }}\n          padding={{ top: 40, bottom: 30, left: 10, right: 10 }}\n        >\n          <VictoryLegend\n            x={56}\n            y={0}\n            centerTitle\n            orientation=\"horizontal\"\n            gutter={20}\n            size={4}\n            style={{\n              labels: {\n                fontSize: 16,\n              },\n            }}\n            data={[\n              {\n                name: 'Pre-therapy',\n                symbol: {\n                  fill: 'white',\n                  stroke: prevTherapyColor,\n                  strokeWidth: 3,\n                },\n              },\n              {\n                name: 'Post-therapy',\n                symbol: {\n                  fill: 'white',\n                  stroke: postTherapyColor,\n                  strokeWidth: 3,\n                },\n              },\n            ]}\n          />\n          <VictoryAxis\n            tickValues={tickValues}\n            tickLabelComponent={<VictoryLabel />}\n            style={{\n              grid: {\n                stroke: Colors.LIGHT_GRAY,\n                strokeWidth: 2,\n              },\n              axis: { stroke: '#FFF', strokeWidth: 2 },\n              labels: {\n                fontFamily: Fonts.FONT_FACE_MEDIUM,\n                fontSize: fontSize,\n              },\n            }}\n          />\n          {/* <VictoryAxis dependentAxis/> */}\n          \n\n          <VictoryGroup>\n            <VictoryLine\n              data={prevTherapy}\n              style={{ data: { stroke: prevTherapyColor, strokeWidth: 3 } }}\n              interpolation=\"linear\"\n              animate={{ delay: 500, duration: 500 }}\n            />\n            <VictoryScatter\n              size={4}\n              data={prevTherapy}\n              style={{\n                data: {\n                  fill: 'white',\n                  stroke: prevTherapyColor,\n                  strokeWidth: 3,\n                },\n              }}\n              animate={{ delay: 500, duration: 500 }}\n            />\n          </VictoryGroup>\n\n          <VictoryGroup>\n            <VictoryLine\n              data={postTherapy}\n              style={{ data: { stroke: postTherapyColor, strokeWidth: 3 } }}\n              interpolation=\"linear\"\n              animate={{ delay: 0, duration: 500 }}\n            />\n            <VictoryScatter\n              size={4}\n              data={postTherapy}\n              style={{\n                data: {\n                  fill: 'white',\n                  stroke: postTherapyColor,\n                  strokeWidth: 3,\n                },\n              }}\n              animate={{ delay: 1000, duration: 500 }}\n            />\n          </VictoryGroup>\n        </VictoryChart>\n      </View>\n    </>\n  );\n};\n\nconst highColor = 'red';\nconst lowColor = Colors.NAVY;\nconst prevTherapyColor = Colors.LOGO_BLUE;\nconst postTherapyColor = Colors.GREEN;\nconst fontSize = 18;\n//const fontFamily = ObjektivMedium;\n\nconst styles = StyleSheet.create({\n  chartContainer: {\n    flex: 1,\n    paddingVertical: 30,\n    width: '100%',\n    backgroundColor: Colors.WHITE,\n    //backgroundColor: 'red',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}