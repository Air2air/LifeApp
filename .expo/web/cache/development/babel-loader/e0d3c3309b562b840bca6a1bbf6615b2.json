{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Stepper } from \"./../../components/Stepper\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport * as Animatable from 'react-native-animatable';\nimport { Button } from \"./../../components/Button\";\nimport Colors from \"./../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar title = 'Authentication';\nvar description = 'Please select your date of birth:';\nvar step = 1;\nexport var AuthDOBScreen = function AuthDOBScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDOBButtonVisible = _useState4[0],\n      setDOBButtonVisibility = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      areResultButtonsVisible = _useState6[0],\n      setResultButtonsVisibility = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      thisDate = _useState8[0],\n      setThisDate = _useState8[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setDOBButtonVisibility(false);\n    setResultButtonsVisibility(true);\n    setDatePickerVisibility(false);\n    setThisDate(date);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Animatable.View, {\n        animation: \"fadeIn\",\n        delay: 500,\n        duration: 1000,\n        style: styles.stepper,\n        children: _jsx(Stepper, {\n          activeStep: step\n        })\n      }), _jsxs(View, {\n        style: styles.textWrapper,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: title\n        }), _jsx(Text, {\n          style: styles.description,\n          children: description\n        })]\n      }), _jsx(Animatable.View, {\n        animation: \"fadeInUp\",\n        delay: 1000,\n        duration: 500,\n        style: styles.dobButton,\n        children: isDOBButtonVisible && _jsx(Button, {\n          buttonText: \"My Date of Birth\",\n          type: \"solid-green\",\n          onPress: showDatePicker\n        })\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        mode: \"date\",\n        onConfirm: handleConfirm,\n        onCancel: hideDatePicker\n      }), _jsx(Animatable.View, {\n        animation: \"fadeInDown\",\n        delay: 1000,\n        duration: 1000,\n        children: _jsx(Text, {\n          style: styles.dobText,\n          children: thisDate ? thisDate.toLocaleDateString('en-US', {\n            month: 'long',\n            day: 'numeric',\n            year: 'numeric'\n          }) : ''\n        })\n      }), areResultButtonsVisible && _jsx(_Fragment, {\n        children: _jsxs(View, {\n          style: styles.resultButtonContainer,\n          children: [_jsx(Animatable.View, {\n            animation: \"fadeInLeft\",\n            delay: 1500,\n            duration: Animations.SPEED_FAST,\n            style: {\n              marginHorizontal: 5\n            },\n            children: _jsx(Button, {\n              buttonText: \"Try Again\",\n              onPress: showDatePicker,\n              type: \"outline-blue-light\",\n              style: styles.resultButton\n            })\n          }), _jsx(Animatable.View, {\n            animation: \"fadeInRight\",\n            delay: 1000,\n            duration: Animations.SPEED_FAST,\n            style: {\n              marginHorizontal: 5\n            },\n            children: _jsx(Button, {\n              arrowDirection: \"right\",\n              buttonText: \"This is Correct\",\n              onPress: function onPress() {\n                return navigation.navigate('AuthZipScreen');\n              },\n              type: \"solid-green\",\n              style: styles.resultButton\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    justifyContent: 'space-around',\n    width: '100%',\n    paddingHorizontal: 30,\n    backgroundColor: Colors.WHITE\n  },\n  stepper: {\n    height: '25%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textWrapper: {\n    textAlign: 'center'\n  },\n  title: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_TITLE,\n    textAlign: 'center',\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_TITLE\n  },\n  description: {\n    marginVertical: 12,\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_CAPTION,\n    textAlign: 'center',\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5\n  },\n  dobText: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: 24,\n    height: 70,\n    color: Colors.NAVY,\n    textAlign: 'center'\n  },\n  resultButtonContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  resultButton: {}\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/screens/Auth/AuthDOBScreen.js"],"names":["useState","useNavigation","Stepper","DateTimePickerModal","Animatable","Button","Colors","title","description","step","AuthDOBScreen","navigation","isDatePickerVisible","setDatePickerVisibility","isDOBButtonVisible","setDOBButtonVisibility","areResultButtonsVisible","setResultButtonsVisibility","thisDate","setThisDate","showDatePicker","hideDatePicker","handleConfirm","date","styles","container","stepper","textWrapper","dobButton","dobText","toLocaleDateString","month","day","year","resultButtonContainer","Animations","SPEED_FAST","marginHorizontal","resultButton","navigate","StyleSheet","create","display","flexDirection","flex","justifyContent","width","paddingHorizontal","backgroundColor","WHITE","height","alignItems","textAlign","fontFamily","Fonts","FONT_FACE_TITLE","fontSize","FONT_SIZE_TITLE","color","NAVY","lineHeight","marginVertical","FONT_FACE_DESCRIPTION","FONT_SIZE_CAPTION","FONT_SIZE_DESCRIPTION"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,SAASC,MAAT;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,KAAK,GAAG,gBAAd;AACA,IAAMC,WAAW,GAAG,mCAApB;AACA,IAAMC,IAAI,GAAG,CAAb;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAMC,UAAU,GAAGV,aAAa,EAAhC;;AACA,kBAAuDD,QAAQ,CAAC,KAAD,CAA/D;AAAA;AAAA,MAAOY,mBAAP;AAAA,MAA4BC,uBAA5B;;AACA,mBAAqDb,QAAQ,CAAC,IAAD,CAA7D;AAAA;AAAA,MAAOc,kBAAP;AAAA,MAA2BC,sBAA3B;;AACA,mBAA8Df,QAAQ,CAAC,KAAD,CAAtE;AAAA;AAAA,MAAOgB,uBAAP;AAAA,MAAgCC,0BAAhC;;AAEA,mBAA8BjB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAKkB,QAAL;AAAA,MAAeC,WAAf;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BP,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,GAFD;;AAIA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,GAFD;;AAIA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AAC5BR,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAJ,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAM,IAAAA,WAAW,CAACI,IAAD,CAAX;AACD,GALD;;AASA,SACE;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,UAAD,CAAY,IAAZ;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,KAAK,EAAE,GAFT;AAGE,QAAA,QAAQ,EAAE,IAHZ;AAIE,QAAA,KAAK,EAAED,MAAM,CAACE,OAJhB;AAAA,kBAME,KAAC,OAAD;AAAS,UAAA,UAAU,EAAEjB;AAArB;AANF,QADF,EAUE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEe,MAAM,CAACG,WAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACjB,KAApB;AAAA,oBAA4BA;AAA5B,UADF,EAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEiB,MAAM,CAAChB,WAApB;AAAA,oBAAkCA;AAAlC,UAFF;AAAA,QAVF,EAeE,KAAC,UAAD,CAAY,IAAZ;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,QAAQ,EAAE,GAHZ;AAIE,QAAA,KAAK,EAAEgB,MAAM,CAACI,SAJhB;AAAA,kBAMGd,kBAAkB,IACjB,KAAC,MAAD;AACE,UAAA,UAAU,EAAC,kBADb;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,OAAO,EAAEM;AAHX;AAPJ,QAfF,EA6BE,KAAC,mBAAD;AACE,QAAA,SAAS,EAAER,mBADb;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAEU,aAHb;AAIE,QAAA,QAAQ,EAAED;AAJZ,QA7BF,EAoCE,KAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAwC,QAAA,KAAK,EAAE,IAA/C;AAAqD,QAAA,QAAQ,EAAE,IAA/D;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACK,OAApB;AAAA,oBACGX,QAAQ,GACLA,QAAQ,CAACY,kBAAT,CAA4B,OAA5B,EAAqC;AACnCC,YAAAA,KAAK,EAAE,MAD4B;AAEnCC,YAAAA,GAAG,EAAE,SAF8B;AAGnCC,YAAAA,IAAI,EAAE;AAH6B,WAArC,CADK,GAML;AAPN;AADF,QApCF,EA+CGjB,uBAAuB,IACtB;AAAA,kBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEQ,MAAM,CAACU,qBAApB;AAAA,qBACE,KAAC,UAAD,CAAY,IAAZ;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,KAAK,EAAE,IAFT;AAGE,YAAA,QAAQ,EAAEC,UAAU,CAACC,UAHvB;AAIE,YAAA,KAAK,EAAE;AAAEC,cAAAA,gBAAgB,EAAE;AAApB,aAJT;AAAA,sBAME,KAAC,MAAD;AACE,cAAA,UAAU,EAAC,WADb;AAEE,cAAA,OAAO,EAAEjB,cAFX;AAGE,cAAA,IAAI,EAAC,oBAHP;AAIE,cAAA,KAAK,EAAEI,MAAM,CAACc;AAJhB;AANF,YADF,EAcE,KAAC,UAAD,CAAY,IAAZ;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE,IAFT;AAGE,YAAA,QAAQ,EAAEH,UAAU,CAACC,UAHvB;AAIE,YAAA,KAAK,EAAE;AAAEC,cAAAA,gBAAgB,EAAE;AAApB,aAJT;AAAA,sBAME,KAAC,MAAD;AACE,cAAA,cAAc,EAAC,OADjB;AAEE,cAAA,UAAU,EAAC,iBAFb;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAM1B,UAAU,CAAC4B,QAAX,CAAoB,eAApB,CAAN;AAAA,eAHX;AAIE,cAAA,IAAI,EAAC,aAJP;AAKE,cAAA,KAAK,EAAEf,MAAM,CAACc;AALhB;AANF,YAdF;AAAA;AADF,QAhDJ;AAAA;AADF,IADF;AAqFD,CA9GM;AAgHP,IAAMd,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,cAAc,EAAE,cAJP;AAKTC,IAAAA,KAAK,EAAE,MALE;AAMTC,IAAAA,iBAAiB,EAAE,EANV;AAOTC,IAAAA,eAAe,EAAE1C,MAAM,CAAC2C;AAPf,GADoB;AAU/BvB,EAAAA,OAAO,EAAE;AACPwB,IAAAA,MAAM,EAAE,KADD;AAEPR,IAAAA,OAAO,EAAE,MAFF;AAGPS,IAAAA,UAAU,EAAE,QAHL;AAIPN,IAAAA,cAAc,EAAE;AAJT,GAVsB;AAiB/BlB,EAAAA,WAAW,EAAE;AACXyB,IAAAA,SAAS,EAAE;AADA,GAjBkB;AAqB/B7C,EAAAA,KAAK,EAAE;AACL8C,IAAAA,UAAU,EAAEC,KAAK,CAACC,eADb;AAELC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,eAFX;AAGLL,IAAAA,SAAS,EAAE,QAHN;AAILM,IAAAA,KAAK,EAAEpD,MAAM,CAACqD,IAJT;AAKLC,IAAAA,UAAU,EAAEN,KAAK,CAACG;AALb,GArBwB;AA6B/BjD,EAAAA,WAAW,EAAE;AACXqD,IAAAA,cAAc,EAAE,EADL;AAEXR,IAAAA,UAAU,EAAEC,KAAK,CAACQ,qBAFP;AAGXN,IAAAA,QAAQ,EAAEF,KAAK,CAACS,iBAHL;AAIXX,IAAAA,SAAS,EAAE,QAJA;AAKXM,IAAAA,KAAK,EAAEpD,MAAM,CAACqD,IALH;AAMXC,IAAAA,UAAU,EAAEN,KAAK,CAACU,qBAAN,GAA8B;AAN/B,GA7BkB;AAsC/BnC,EAAAA,OAAO,EAAE;AACPwB,IAAAA,UAAU,EAAEC,KAAK,CAACC,eADX;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPN,IAAAA,MAAM,EAAE,EAHD;AAIPQ,IAAAA,KAAK,EAAEpD,MAAM,CAACqD,IAJP;AAKPP,IAAAA,SAAS,EAAE;AALJ,GAtCsB;AA8C/BlB,EAAAA,qBAAqB,EAAE;AACrBQ,IAAAA,OAAO,EAAE,MADY;AAErBC,IAAAA,aAAa,EAAE;AAFM,GA9CQ;AAkD/BL,EAAAA,YAAY,EAAE;AAlDiB,CAAlB,CAAf","sourcesContent":["import { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Stepper } from './../../components/Stepper';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport * as Animatable from 'react-native-animatable';\nimport { Button } from './../../components/Button';\nimport Colors from './../../constants/Colors';\n\nconst title = 'Authentication';\nconst description = 'Please select your date of birth:';\nconst step = 1;\n\nexport const AuthDOBScreen = () => {\n  const navigation = useNavigation();\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [isDOBButtonVisible, setDOBButtonVisibility] = useState(true);\n  const [areResultButtonsVisible, setResultButtonsVisibility] = useState(false);\n\n  let [thisDate, setThisDate] = useState('');\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirm = date => {\n    setDOBButtonVisibility(false);\n    setResultButtonsVisibility(true);\n    setDatePickerVisibility(false);\n    setThisDate(date);\n  };\n\n  //run the result buttons animation\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Animatable.View\n          animation=\"fadeIn\"\n          delay={500}\n          duration={1000}\n          style={styles.stepper}\n        >\n          <Stepper activeStep={step} />\n        </Animatable.View>\n\n        <View style={styles.textWrapper}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description}</Text>\n        </View>\n\n        <Animatable.View\n          animation=\"fadeInUp\"\n          delay={1000}\n          duration={500}\n          style={styles.dobButton}\n        >\n          {isDOBButtonVisible && (\n            <Button\n              buttonText=\"My Date of Birth\"\n              type=\"solid-green\"\n              onPress={showDatePicker}\n            />\n          )}\n        </Animatable.View>\n        <DateTimePickerModal\n          isVisible={isDatePickerVisible}\n          mode=\"date\"\n          onConfirm={handleConfirm}\n          onCancel={hideDatePicker}\n        />\n\n        <Animatable.View animation=\"fadeInDown\" delay={1000} duration={1000}>\n          <Text style={styles.dobText}>\n            {thisDate\n              ? thisDate.toLocaleDateString('en-US', {\n                  month: 'long',\n                  day: 'numeric',\n                  year: 'numeric',\n                })\n              : ''}\n          </Text>\n        </Animatable.View>\n        {areResultButtonsVisible && (\n          <>\n            <View style={styles.resultButtonContainer}>\n              <Animatable.View\n                animation=\"fadeInLeft\"\n                delay={1500}\n                duration={Animations.SPEED_FAST}\n                style={{ marginHorizontal: 5 }}\n              >\n                <Button\n                  buttonText=\"Try Again\"\n                  onPress={showDatePicker}\n                  type=\"outline-blue-light\"\n                  style={styles.resultButton}\n                />\n              </Animatable.View>\n              <Animatable.View\n                animation=\"fadeInRight\"\n                delay={1000}\n                duration={Animations.SPEED_FAST}\n                style={{ marginHorizontal: 5 }}\n              >\n                <Button\n                  arrowDirection=\"right\"\n                  buttonText=\"This is Correct\"\n                  onPress={() => navigation.navigate('AuthZipScreen')}\n                  type=\"solid-green\"\n                  style={styles.resultButton}\n                />\n              </Animatable.View>\n            </View>\n          </>\n        )}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    justifyContent: 'space-around',\n    width: '100%',\n    paddingHorizontal: 30,\n    backgroundColor: Colors.WHITE,\n  },\n  stepper: {\n    height: '25%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    //backgroundColor: '#ffcc00',\n  },\n  textWrapper: {\n    textAlign: 'center',\n    //backgroundColor: 'blue',\n  },\n  title: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_TITLE,\n    textAlign: 'center',\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_TITLE,\n    //backgroundColor: '#ffcc00',\n  },\n  description: {\n    marginVertical: 12,\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_CAPTION,\n    textAlign: 'center',\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5,\n    //backgroundColor: 'green',\n  },\n  dobText: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: 24,\n    height: 70,\n    color: Colors.NAVY,\n    textAlign: 'center',\n    //backgroundColor: 'red',\n  },\n  resultButtonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  resultButton: {\n    //\n  },\n});\n"]},"metadata":{},"sourceType":"module"}