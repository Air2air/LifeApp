{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Animatable from 'react-native-animatable';\nimport { PressableOpacity } from 'react-native-pressable-opacity';\nimport { Button } from \"./../Button\";\nimport YoutubePlayer from 'react-native-youtube-iframe';\nimport Dimensions from \"../../constants/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var VideoItem = function VideoItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      playing = _useState2[0],\n      setPlaying = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var stopVideo = useCallback(function () {\n    setPlaying(false);\n    setModalVisible(false);\n  }, []);\n\n  var VideoPlayer = function VideoPlayer(props) {\n    var onStateChange = useCallback(function (state) {\n      if (state === 'ended') {\n        setPlaying(false);\n        setModalVisible(false);\n      }\n    }, []);\n    return _jsx(Animatable.View, {\n      animation: \"fadeIn\",\n      delay: 0,\n      duration: 2000,\n      style: styles.videoWindow,\n      children: _jsx(YoutubePlayer, {\n        height: videoHeight,\n        width: videoWidth,\n        play: playing,\n        videoId: props.videoId,\n        onChangeState: onStateChange\n      })\n    });\n  };\n\n  var VideoModal = function VideoModal(props) {\n    return _jsxs(View, {\n      style: styles.centeredView,\n      children: [_jsx(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!modalVisible);\n          stopVideo();\n        },\n        onDismiss: stopVideo,\n        style: styles.modalView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(VideoPlayer, {\n            videoId: props.videoId\n          }), _jsxs(View, {\n            style: styles.modalContent,\n            children: [_jsx(Animatable.Text, {\n              animation: \"fadeIn\",\n              delay: 400,\n              duration: 800,\n              style: styles.modalTitle,\n              children: props.title\n            }), _jsx(Animatable.Text, {\n              animation: \"fadeIn\",\n              delay: 1000,\n              duration: 800,\n              style: styles.modalDesc,\n              children: props.description\n            }), _jsx(Animatable.View, {\n              animation: \"fadeIn\",\n              delay: 1000,\n              duration: 800,\n              children: _jsx(Button, {\n                buttonText: \"Close Video\",\n                onPress: function onPress() {\n                  return setModalVisible(!modalVisible);\n                },\n                type: \"solid-green\"\n              })\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.videoItemRow,\n        children: _jsxs(PressableOpacity, {\n          activeOpacity: 0.5,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          style: styles.videoInner,\n          children: [_jsxs(View, {\n            style: styles.thumbnailWrapper,\n            children: [_jsx(Image, {\n              source: props.thumbnail,\n              style: styles.thumbnailWrapper\n            }), _jsx(View, {\n              style: styles.thumbnailTime,\n              children: _jsx(Text, {\n                style: styles.thumbnailTimeText,\n                children: props.videoLength\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.descriptionWrapper,\n            children: [_jsx(Text, {\n              style: styles.title,\n              numberOfLines: 1,\n              ellipsizeMode: \"tail\",\n              children: props.title\n            }), _jsx(Text, {\n              style: styles.description,\n              numberOfLines: 2,\n              ellipsizeMode: \"tail\",\n              children: props.description\n            })]\n          })]\n        })\n      })]\n    });\n  };\n\n  return _jsx(VideoModal, {\n    title: props.title,\n    id: props.id,\n    thumbnail: props.thumbnail,\n    description: props.description,\n    videoLength: props.videoLength,\n    videoId: props.videoId\n  });\n};\nvar videoHeight = 240;\nvar videoWidth = 414;\nvar styles = StyleSheet.create({\n  centeredView: {\n    alignItems: 'center'\n  },\n  modalView: {\n    marginTop: Dimensions.HEADER_HEIGHT,\n    paddingBottom: 20,\n    backgroundColor: Colors.WHITE\n  },\n  videoWindow: {\n    width: videoWidth,\n    minHeight: videoHeight\n  },\n  modalContent: {\n    paddingVertical: 20,\n    paddingHorizontal: 30\n  },\n  modalTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: 18,\n    color: Colors.NAVY,\n    paddingHorizontal: 30\n  },\n  modalDesc: {\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.7,\n    marginVertical: 20\n  },\n  videoItemRow: {\n    height: Dimensions.CARD_HEIGHT,\n    width: '100%',\n    marginTop: 10\n  },\n  videoInner: {\n    height: Dimensions.CARD_HEIGHT,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    borderRadius: 8,\n    backgroundColor: Colors.WHITE\n  },\n  thumbnailWrapper: {\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    width: Dimensions.CARD_IMAGE_SIZE_SMALL * 1.5,\n    borderRadius: 8\n  },\n  thumbnailTime: {\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL * 0.4,\n    width: Dimensions.CARD_IMAGE_SIZE_SMALL * 0.7,\n    borderBottomRightRadius: 6,\n    borderTopLeftRadius: 8,\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  thumbnailTimeText: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION * 0.9,\n    color: Colors.WHITE\n  },\n  descriptionWrapper: {\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    flexShrink: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5\n  },\n  description: {\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5\n  }\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Video/VideoItem.js"],"names":["React","useState","useCallback","Animatable","PressableOpacity","Button","YoutubePlayer","Dimensions","VideoItem","props","playing","setPlaying","modalVisible","setModalVisible","stopVideo","VideoPlayer","onStateChange","state","styles","videoWindow","videoHeight","videoWidth","videoId","VideoModal","centeredView","modalView","modalContent","modalTitle","title","modalDesc","description","videoItemRow","videoInner","thumbnailWrapper","thumbnail","thumbnailTime","thumbnailTimeText","videoLength","descriptionWrapper","id","StyleSheet","create","alignItems","marginTop","HEADER_HEIGHT","paddingBottom","backgroundColor","Colors","WHITE","width","minHeight","paddingVertical","paddingHorizontal","marginLeft","marginRight","fontFamily","Fonts","FONT_FACE_TITLE","fontSize","color","NAVY","FONT_FACE_DESCRIPTION","FONT_SIZE_DESCRIPTION","lineHeight","marginVertical","height","CARD_HEIGHT","display","flexDirection","borderRadius","CARD_IMAGE_SIZE_SMALL","position","justifyContent","borderBottomRightRadius","borderTopLeftRadius","flexShrink"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Image, Modal, StyleSheet, Text, View } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { PressableOpacity } from 'react-native-pressable-opacity';\nimport { Button } from './../Button';\nimport YoutubePlayer from 'react-native-youtube-iframe';\nimport Dimensions from '../../constants/Dimensions';\n\nexport const VideoItem = props => {\n  const [playing, setPlaying] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const stopVideo = useCallback(() => {\n    setPlaying(false);\n    setModalVisible(false);\n  }, []);\n\n  const VideoPlayer = props => {\n    const onStateChange = useCallback(state => {\n      if (state === 'ended') {\n        setPlaying(false);\n        setModalVisible(false);\n      }\n    }, []);\n\n    return (\n      <Animatable.View\n        animation=\"fadeIn\"\n        delay={0}\n        duration={2000}\n        style={styles.videoWindow}\n      >\n        <YoutubePlayer\n          height={videoHeight}\n          width={videoWidth}\n          play={playing}\n          videoId={props.videoId}\n          onChangeState={onStateChange}\n        />\n      </Animatable.View>\n    );\n  };\n\n  const VideoModal = props => {\n    return (\n      <View style={styles.centeredView}>\n        <Modal\n          animationType=\"fade\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n            stopVideo();\n          }}\n          onDismiss={stopVideo}\n          style={styles.modalView}\n        >\n          <View style={styles.modalView}>\n            <VideoPlayer videoId={props.videoId} />\n            <View style={styles.modalContent}>\n              <Animatable.Text\n                animation=\"fadeIn\"\n                delay={400}\n                duration={800}\n                style={styles.modalTitle}\n              >\n                {props.title}\n              </Animatable.Text>\n              <Animatable.Text\n                animation=\"fadeIn\"\n                delay={1000}\n                duration={800}\n                style={styles.modalDesc}\n              >\n                {props.description}\n              </Animatable.Text>\n              <Animatable.View animation=\"fadeIn\" delay={1000} duration={800}>\n                <Button\n                  buttonText=\"Close Video\"\n                  onPress={() => setModalVisible(!modalVisible)}\n                  type=\"solid-green\"\n                />\n              </Animatable.View>\n            </View>\n          </View>\n        </Modal>\n        <View style={styles.videoItemRow}>\n          <PressableOpacity\n            activeOpacity={0.5}\n            onPress={() => setModalVisible(true)}\n            style={styles.videoInner}\n          >\n            <View style={styles.thumbnailWrapper}>\n              <Image source={props.thumbnail} style={styles.thumbnailWrapper} />\n              <View style={styles.thumbnailTime}>\n                <Text style={styles.thumbnailTimeText}>\n                  {props.videoLength}\n                </Text>\n              </View>\n            </View>\n            <View style={styles.descriptionWrapper}>\n              <Text style={styles.title} numberOfLines={1} ellipsizeMode=\"tail\">\n                {props.title}\n              </Text>\n              <Text\n                style={styles.description}\n                numberOfLines={2}\n                ellipsizeMode=\"tail\"\n              >\n                {props.description}\n              </Text>\n            </View>\n          </PressableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <VideoModal\n      title={props.title}\n      id={props.id}\n      thumbnail={props.thumbnail}\n      description={props.description}\n      videoLength={props.videoLength}\n      videoId={props.videoId}\n    />\n  );\n};\n\nconst videoHeight = 240;\nconst videoWidth = 414;\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    alignItems: 'center',\n  },\n  modalView: {\n    //width: '100%',\n    marginTop: Dimensions.HEADER_HEIGHT,\n    //marginBottom: Dimensions.FOOTER_HEIGHT,\n    //alignItems: 'center',\n    paddingBottom: 20,\n    backgroundColor: Colors.WHITE,\n    //backgroundColor: 'green',\n  },\n  videoWindow: {\n    width: videoWidth,\n    minHeight: videoHeight,\n    //backgroundColor: 'blue',\n  },\n  modalContent: {\n    paddingVertical: 20,\n    paddingHorizontal: 30,\n    //backgroundColor: 'blue',\n  },\n  modalTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: 18,\n    color: Colors.NAVY,\n    paddingHorizontal: 30,\n  },\n  modalDesc: {\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.7,\n    marginVertical: 20,\n  },\n  videoItemRow: {\n    height: Dimensions.CARD_HEIGHT,\n    width: '100%',\n    marginTop: 10,\n    //backgroundColor: 'blue',\n  },\n  videoInner: {\n    height: Dimensions.CARD_HEIGHT,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    borderRadius: 8,\n    backgroundColor: Colors.WHITE,\n    //backgroundColor: 'green',\n  },\n  thumbnailWrapper: {\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    width: Dimensions.CARD_IMAGE_SIZE_SMALL * 1.5,\n    borderRadius: 8,\n    //backgroundColor: '#ffcc00',\n  },\n  thumbnailTime: {\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL * 0.4,\n    width: Dimensions.CARD_IMAGE_SIZE_SMALL * 0.7,\n    borderBottomRightRadius: 6,\n    borderTopLeftRadius: 8,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  thumbnailTimeText: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION * 0.9,\n    color: Colors.WHITE,\n  },\n  descriptionWrapper: {\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    flexShrink: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    //backgroundColor: 'aqua',\n  },\n  title: {\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5,\n    //backgroundColor: 'red',\n  },\n  description: {\n    fontFamily: Fonts.FONT_FACE_DESCRIPTION,\n    fontSize: Fonts.FONT_SIZE_DESCRIPTION,\n    color: Colors.NAVY,\n    lineHeight: Fonts.FONT_SIZE_DESCRIPTION * 1.5,\n    //backgroundColor: 'red',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}