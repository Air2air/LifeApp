{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { Circle } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CircularProgress = function CircularProgress(props) {\n  var lineWidth = 8;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(AnimatedCircularProgress, {\n      prefill: 0,\n      duration: Animations.SPEED_SLOW,\n      size: Dimensions.CARD_IMAGE_SIZE_SMALL,\n      width: lineWidth,\n      tintColor: props.foregroundColor,\n      backgroundColor: props.backgroundColor,\n      padding: 0,\n      rotation: 0,\n      fill: props.stepCurrent * 10,\n      lineCap: \"round\"\n    }), _jsxs(Text, {\n      style: styles.points,\n      children: [props.stepCurrent, \"/\", props.stepBase]\n    }), _jsx(Circle, {\n      style: styles.capCircle,\n      r: lineWidth / 2,\n      fill: Colors.GREEN\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    position: 'relative',\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL\n  },\n  points: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    color: Colors.NAVY,\n    position: 'absolute',\n    top: 0,\n    fontSize: Fonts.FONT_SIZE_CAPTION\n  },\n  capCircle: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  }\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Card/CircularProgress.js"],"names":["AnimatedCircularProgress","Circle","CircularProgress","props","lineWidth","styles","container","Animations","SPEED_SLOW","Dimensions","CARD_IMAGE_SIZE_SMALL","foregroundColor","backgroundColor","stepCurrent","points","stepBase","capCircle","Colors","GREEN","StyleSheet","create","alignItems","position","height","display","lineHeight","fontFamily","Fonts","FONT_FACE_TITLE","color","NAVY","top","fontSize","FONT_SIZE_CAPTION","left"],"mappings":";;;AACA,SAASA,wBAAT,QAAyC,gCAAzC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AACvC,MAAMC,SAAS,GAAG,CAAlB;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,wBAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,QAAQ,EAAEC,UAAU,CAACC,UAFvB;AAGE,MAAA,IAAI,EAAEC,UAAU,CAACC,qBAHnB;AAIE,MAAA,KAAK,EAAEN,SAJT;AAKE,MAAA,SAAS,EAAED,KAAK,CAACQ,eALnB;AAME,MAAA,eAAe,EAAER,KAAK,CAACS,eANzB;AAOE,MAAA,OAAO,EAAE,CAPX;AAQE,MAAA,QAAQ,EAAE,CARZ;AASE,MAAA,IAAI,EAAET,KAAK,CAACU,WAAN,GAAoB,EAT5B;AAUE,MAAA,OAAO,EAAC;AAVV,MADF,EAaE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAER,MAAM,CAACS,MAApB;AAAA,iBACGX,KAAK,CAACU,WADT,OACuBV,KAAK,CAACY,QAD7B;AAAA,MAbF,EAgBE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAEV,MAAM,CAACW,SAAtB;AAAiC,MAAA,CAAC,EAAEZ,SAAS,GAAG,CAAhD;AAAmD,MAAA,IAAI,EAAEa,MAAM,CAACC;AAAhE,MAhBF;AAAA,IADF;AAoBD,CAvBM;AAyBP,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,QAAQ,EAAE,UAFD;AAGTC,IAAAA,MAAM,EAAEd,UAAU,CAACC;AAHV,GADoB;AAM/BI,EAAAA,MAAM,EAAE;AACNU,IAAAA,OAAO,EAAE,MADH;AAENH,IAAAA,UAAU,EAAE,QAFN;AAGNI,IAAAA,UAAU,EAAEhB,UAAU,CAACC,qBAHjB;AAINgB,IAAAA,UAAU,EAAEC,KAAK,CAACC,eAJZ;AAKNL,IAAAA,MAAM,EAAEd,UAAU,CAACC,qBALb;AAMNmB,IAAAA,KAAK,EAAEZ,MAAM,CAACa,IANR;AAONR,IAAAA,QAAQ,EAAE,UAPJ;AAQNS,IAAAA,GAAG,EAAE,CARC;AASNC,IAAAA,QAAQ,EAAEL,KAAK,CAACM;AATV,GANuB;AAiB/BjB,EAAAA,SAAS,EAAE;AACTM,IAAAA,QAAQ,EAAE,UADD;AAETS,IAAAA,GAAG,EAAE,CAFI;AAGTG,IAAAA,IAAI,EAAE;AAHG;AAjBoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View, Text } from 'react-native';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { Circle } from 'react-native-svg';\n\nexport const CircularProgress = props => {\n  const lineWidth = 8;\n\n  return (\n    <View style={styles.container}>\n      <AnimatedCircularProgress\n        prefill={0}\n        duration={Animations.SPEED_SLOW}\n        size={Dimensions.CARD_IMAGE_SIZE_SMALL}\n        width={lineWidth}\n        tintColor={props.foregroundColor}\n        backgroundColor={props.backgroundColor}\n        padding={0}\n        rotation={0}\n        fill={props.stepCurrent * 10}\n        lineCap=\"round\"\n      />\n      <Text style={styles.points}>\n        {props.stepCurrent}/{props.stepBase}\n      </Text>\n      <Circle style={styles.capCircle} r={lineWidth / 2} fill={Colors.GREEN} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    position: 'relative',\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n  },\n  points: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    fontFamily: Fonts.FONT_FACE_TITLE,\n    height: Dimensions.CARD_IMAGE_SIZE_SMALL,\n    color: Colors.NAVY,\n    position: 'absolute',\n    top: 0,\n    fontSize: Fonts.FONT_SIZE_CAPTION,\n  },\n  capCircle: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}