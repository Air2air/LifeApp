{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var steps = [{\n  title: 'Birthdate',\n  id: '1'\n}, {\n  title: 'Zip Code',\n  id: '2'\n}, {\n  title: 'Password',\n  id: '3'\n}];\n\nvar ListItem = function ListItem(props) {\n  return _jsx(_Fragment, {\n    children: props.activeStep == props.itemId ? _jsxs(View, {\n      style: styles.stepWrapper,\n      children: [_jsx(View, {\n        style: styles.selectedStep\n      }), _jsx(Text, {\n        style: styles.selectedStepLabel,\n        children: props.title\n      })]\n    }) : _jsxs(View, {\n      style: styles.stepWrapper,\n      children: [_jsx(View, {\n        style: styles.step\n      }), _jsx(Text, {\n        style: styles.stepLabel,\n        children: props.title\n      })]\n    })\n  });\n};\n\nexport var Stepper = function Stepper(props) {\n  var _useFonts = useFonts({\n    ObjektivBold: require(\"./../../assets/fonts/ObjektivMk2-Bold.ttf\"),\n    ObjektivMedium: require(\"./../../assets/fonts/ObjektivMk2-Medium.ttf\"),\n    ObjektivRegular: require(\"./../../assets/fonts/ObjektivMk2-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(FlatList, {\n        contentContainerStyle: styles.innerRow,\n        data: steps,\n        keyExtractor: function keyExtractor(item) {\n          return item.title;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(ListItem, {\n            title: item.title,\n            id: item.id,\n            itemId: item.id,\n            activeStep: props.activeStep\n          });\n        }\n      })\n    })\n  });\n};\nvar stepSize = 20;\nvar rowHeight = 46;\nvar lineWeight = 1;\nvar lineColor = Colors.DARK_GRAY;\nvar selectedColor = Colors.GREEN;\nvar styles = StyleSheet.create({\n  container: {\n    height: rowHeight,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: '15%',\n    backgroundColor: Colors.WHITE\n  },\n  innerRow: {\n    position: 'relative',\n    height: rowHeight,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: Colors.WHITE\n  },\n  line: {\n    zIndex: 1,\n    position: 'absolute',\n    top: 12,\n    width: '100%',\n    height: 2,\n    borderBottomColor: lineColor,\n    borderBottomWidth: lineWeight\n  },\n  stepWrapper: {\n    height: rowHeight,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  step: {\n    zIndex: 2,\n    height: stepSize,\n    width: stepSize,\n    borderRadius: stepSize,\n    borderWidth: lineWeight,\n    borderColor: lineColor,\n    backgroundColor: Colors.WHITE\n  },\n  selectedStep: {\n    zIndex: 2,\n    height: stepSize,\n    width: stepSize,\n    borderRadius: stepSize,\n    borderWidth: lineWeight,\n    borderColor: selectedColor,\n    backgroundColor: selectedColor\n  },\n  stepLabel: {\n    marginTop: 7,\n    fontFamily: Fonts.FONT_FACE_MEDIUM,\n    fontSize: 14,\n    color: lineColor\n  },\n  selectedStepLabel: {\n    marginTop: 7,\n    fontFamily: Fonts.FONT_FACE_BOLD,\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Stepper.js"],"names":["useFonts","steps","title","id","ListItem","props","activeStep","itemId","styles","stepWrapper","selectedStep","selectedStepLabel","step","stepLabel","Stepper","ObjektivBold","require","ObjektivMedium","ObjektivRegular","loaded","container","innerRow","item","stepSize","rowHeight","lineWeight","lineColor","Colors","DARK_GRAY","selectedColor","GREEN","StyleSheet","create","height","width","display","flexDirection","alignItems","justifyContent","paddingHorizontal","backgroundColor","WHITE","position","line","zIndex","top","borderBottomColor","borderBottomWidth","borderRadius","borderWidth","borderColor","marginTop","fontFamily","Fonts","FONT_FACE_MEDIUM","fontSize","color","FONT_FACE_BOLD"],"mappings":"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","sourcesContent":["import { View, StyleSheet, Text, FlatList } from 'react-native';\nimport { useFonts } from 'expo-font';\n\nexport const steps = [\n  {\n    title: 'Birthdate',\n    id: '1',\n  },\n  {\n    title: 'Zip Code',\n    id: '2',\n  },\n  {\n    title: 'Password',\n    id: '3',\n  },\n];\n\nconst ListItem = props => {\n  return (\n    <>\n      {props.activeStep == props.itemId ? (\n        <View style={styles.stepWrapper}>\n          <View style={styles.selectedStep}></View>\n          <Text style={styles.selectedStepLabel}>{props.title}</Text>\n        </View>\n      ) : (\n        <View style={styles.stepWrapper}>\n          <View style={styles.step}></View>\n          <Text style={styles.stepLabel}>{props.title}</Text>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport const Stepper = props => {\n  const [loaded] = useFonts({\n    ObjektivBold: require('./../../assets/fonts/ObjektivMk2-Bold.ttf'),\n    ObjektivMedium: require('./../../assets/fonts/ObjektivMk2-Medium.ttf'),\n    ObjektivRegular: require('./../../assets/fonts/ObjektivMk2-Regular.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        {/* <View style={styles.line} /> */}\n        <FlatList\n          contentContainerStyle={styles.innerRow}\n          data={steps}\n          keyExtractor={item => item.title}\n          renderItem={({ item }) => (\n            <ListItem\n              title={item.title}\n              id={item.id}\n              itemId={item.id}\n              activeStep={props.activeStep}\n            />\n          )}\n        />\n      </View>\n    </>\n  );\n};\n\nconst stepSize = 20;\nconst rowHeight = 46;\nconst lineWeight = 1;\nconst lineColor = Colors.DARK_GRAY;\nconst selectedColor = Colors.GREEN;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: rowHeight, //stepSize,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: '15%',\n    backgroundColor: Colors.WHITE,\n    //backgroundColor: 'red',\n  },\n  innerRow: {\n    position: 'relative',\n    height: rowHeight,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: Colors.WHITE,\n    //backgroundColor: 'green',\n  },\n  line: {\n    zIndex: 1,\n    position: 'absolute',\n    top: 12,\n    width: '100%',\n    height: 2,\n    borderBottomColor: lineColor,\n    borderBottomWidth: lineWeight,\n    //backgroundColor: 'blue',\n  },\n  stepWrapper: {\n    height: rowHeight,\n    //width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    //backgroundColor: 'blue',\n  },\n  step: {\n    zIndex: 2,\n    height: stepSize,\n    width: stepSize,\n    borderRadius: stepSize,\n    borderWidth: lineWeight,\n    borderColor: lineColor,\n    backgroundColor: Colors.WHITE,\n  },\n  selectedStep: {\n    zIndex: 2,\n    height: stepSize,\n    width: stepSize,\n    borderRadius: stepSize,\n    borderWidth: lineWeight,\n    borderColor: selectedColor,\n    backgroundColor: selectedColor,\n  },\n  stepLabel: {\n    marginTop: 7,\n    fontFamily: Fonts.FONT_FACE_MEDIUM,\n    fontSize: 14,\n    color: lineColor,\n  },\n  selectedStepLabel: {\n    marginTop: 7,\n    fontFamily: Fonts.FONT_FACE_BOLD,\n    fontSize: 14,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}