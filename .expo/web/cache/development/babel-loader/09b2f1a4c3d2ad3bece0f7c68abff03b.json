{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\"];\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PressableOpacity } from 'react-native-pressable-opacity';\nimport * as Animatable from 'react-native-animatable';\nimport { useFonts } from 'expo-font';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Button = function Button(_ref) {\n  var _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useFonts = useFonts({\n    ObjektivRegular: require(\"./../../assets/fonts/ObjektivMk2-Regular.ttf\"),\n    ObjektivBold: require(\"./../../assets/fonts/ObjektivMk2-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  var arrowLeft = props.arrowDirection === 'left';\n  var arrowRight = props.arrowDirection === 'right';\n  return _jsxs(PressableOpacity, {\n    activeOpacity: 0.5,\n    onPress: onPress,\n    style: [styles.container, props.type == 'solid-green' ? styles.solidGreen : '', props.type == 'solid-green' ? styles.solidGreen : '', props.type == 'solid-gold' ? styles.solidGold : '', props.type == 'outline-blue' ? styles.outlineBlue : '', props.type == 'outline-blue-light' ? styles.outlineBlue : '', props.type == 'outline-green' ? styles.outlineGreen : '', props.type == 'outline-gold' ? styles.outlineGold : ''],\n    children: [arrowLeft && _jsx(FontAwesome, {\n      name: \"chevron-left\",\n      size: 16,\n      style: [styles.buttonArrowLeft, props.type == 'solid-blue' ? styles.solidBlue : '', props.type == 'solid-green' ? styles.solidGreen : '', props.type == 'solid-gold' ? styles.solidGold : '', props.type == 'outline-blue' ? styles.outlineBlue : '', props.type == 'outline-blue-light' ? styles.outlineBlueLight : '', props.type == 'outline-green' ? styles.outlineGreen : '', props.type == 'outline-gold' ? styles.outlineGold : '']\n    }), _jsx(Animatable.Text, {\n      animation: \"fadeIn\",\n      delay: 200,\n      duration: 400,\n      style: [styles.buttonText, props.type == 'solid-blue' ? styles.solidBlue : '', props.type == 'solid-green' ? styles.solidGreen : '', props.type == 'solid-gold' ? styles.solidGold : '', props.type == 'outline-blue' ? styles.outlineBlue : '', props.type == 'outline-blue-light' ? styles.outlineBlueLight : '', props.type == 'outline-green' ? styles.outlineGreen : '', props.type == 'outline-gold' ? styles.outlineGold : ''],\n      children: props.buttonText\n    }), arrowRight && _jsx(FontAwesome, {\n      name: \"chevron-right\",\n      size: 14,\n      style: [styles.buttonArrowRight, props.type == 'solid-blue' ? styles.solidBlue : '', props.type == 'solid-green' ? styles.solidGreen : '', props.type == 'solid-gold' ? styles.solidGold : '', props.type == 'outline-blue' ? styles.outlineBlue : '', props.type == 'outline-blue-light' ? styles.outlineBlueLight : '', props.type == 'outline-green' ? styles.outlineGreen : '', props.type == 'outline-gold' ? styles.outlineGold : '']\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: Dimensions.BUTTON_HEIGHT,\n    paddingHorizontal: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: Dimensions.BUTTON_HEIGHT\n  },\n  buttonText: {\n    fontFamily: Fonts.FONT_FACE_BUTTON,\n    fontSize: Fonts.FONT_SIZE_BUTTON,\n    alignSelf: 'center'\n  },\n  buttonArrowLeft: {\n    marginRight: 7,\n    opacity: 0.5\n  },\n  buttonArrowRight: {\n    marginLeft: 7,\n    opacity: 0.5\n  },\n  solidGreen: {\n    borderColor: Colors.GREEN,\n    backgroundColor: Colors.GREEN,\n    color: Colors.NAVY\n  },\n  solidBlue: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: Colors.HERO_BLUE,\n    color: Colors.WHITE\n  },\n  solidGold: {\n    borderColor: Colors.GOLD,\n    backgroundColor: Colors.GOLD,\n    color: Colors.NAVY\n  },\n  outlineGreen: {\n    borderColor: Colors.GREEN,\n    backgroundColor: 'transparent'\n  },\n  outlineBlue: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: 'transparent',\n    color: Colors.WHITE\n  },\n  outlineBlueLight: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: 'transparent',\n    color: Colors.HERO_BLUE\n  },\n  outlineGold: {\n    borderColor: Colors.GOLD,\n    backgroundColor: 'transparent',\n    color: Colors.NAVY\n  }\n});","map":{"version":3,"sources":["/Users/todddunning/Desktop/Cala/PatientApp/src/components/Button.js"],"names":["PressableOpacity","Animatable","useFonts","FontAwesome","Button","onPress","props","ObjektivRegular","require","ObjektivBold","loaded","arrowLeft","arrowDirection","arrowRight","styles","container","type","solidGreen","solidGold","outlineBlue","outlineGreen","outlineGold","buttonArrowLeft","solidBlue","outlineBlueLight","buttonText","buttonArrowRight","StyleSheet","create","height","Dimensions","BUTTON_HEIGHT","paddingHorizontal","display","flexDirection","justifyContent","alignItems","borderWidth","borderStyle","borderRadius","fontFamily","Fonts","FONT_FACE_BUTTON","fontSize","FONT_SIZE_BUTTON","alignSelf","marginRight","opacity","marginLeft","borderColor","Colors","GREEN","backgroundColor","color","NAVY","HERO_BLUE","WHITE","GOLD"],"mappings":";;;;AACA,SAASA,gBAAT,QAAiC,gCAAjC;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsC;AAAA,0BAAnCC,OAAmC;AAAA,MAAnCA,OAAmC,6BAAzB,YAAM,CAAE,CAAiB;AAAA,MAAZC,KAAY;;AAC1D,kBAAiBJ,QAAQ,CAAC;AACxBK,IAAAA,eAAe,EAAEC,OAAO,gDADA;AAExBC,IAAAA,YAAY,EAAED,OAAO;AAFG,GAAD,CAAzB;AAAA;AAAA,MAAOE,MAAP;;AAKA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAMC,SAAS,GAAGL,KAAK,CAACM,cAAN,KAAyB,MAA3C;AACA,MAAMC,UAAU,GAAGP,KAAK,CAACM,cAAN,KAAyB,OAA5C;AAEA,SACE,MAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAEP,OAFX;AAGE,IAAA,KAAK,EAAE,CACLS,MAAM,CAACC,SADF,EAELT,KAAK,CAACU,IAAN,IAAc,aAAd,GAA8BF,MAAM,CAACG,UAArC,GAAkD,EAF7C,EAGLX,KAAK,CAACU,IAAN,IAAc,aAAd,GAA8BF,MAAM,CAACG,UAArC,GAAkD,EAH7C,EAILX,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACI,SAApC,GAAgD,EAJ3C,EAKLZ,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACK,WAAtC,GAAoD,EAL/C,EAMLb,KAAK,CAACU,IAAN,IAAc,oBAAd,GAAqCF,MAAM,CAACK,WAA5C,GAA0D,EANrD,EAOLb,KAAK,CAACU,IAAN,IAAc,eAAd,GAAgCF,MAAM,CAACM,YAAvC,GAAsD,EAPjD,EAQLd,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACO,WAAtC,GAAoD,EAR/C,CAHT;AAAA,eAcGV,SAAS,IACR,KAAC,WAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAE,CACLG,MAAM,CAACQ,eADF,EAELhB,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACS,SAApC,GAAgD,EAF3C,EAGLjB,KAAK,CAACU,IAAN,IAAc,aAAd,GAA8BF,MAAM,CAACG,UAArC,GAAkD,EAH7C,EAILX,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACI,SAApC,GAAgD,EAJ3C,EAKLZ,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACK,WAAtC,GAAoD,EAL/C,EAMLb,KAAK,CAACU,IAAN,IAAc,oBAAd,GAAqCF,MAAM,CAACU,gBAA5C,GAA+D,EAN1D,EAOLlB,KAAK,CAACU,IAAN,IAAc,eAAd,GAAgCF,MAAM,CAACM,YAAvC,GAAsD,EAPjD,EAQLd,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACO,WAAtC,GAAoD,EAR/C;AAHT,MAfJ,EA8BE,KAAC,UAAD,CAAY,IAAZ;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,QAAQ,EAAE,GAHZ;AAIE,MAAA,KAAK,EAAE,CACLP,MAAM,CAACW,UADF,EAELnB,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACS,SAApC,GAAgD,EAF3C,EAGLjB,KAAK,CAACU,IAAN,IAAc,aAAd,GAA8BF,MAAM,CAACG,UAArC,GAAkD,EAH7C,EAILX,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACI,SAApC,GAAgD,EAJ3C,EAKLZ,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACK,WAAtC,GAAoD,EAL/C,EAMLb,KAAK,CAACU,IAAN,IAAc,oBAAd,GAAqCF,MAAM,CAACU,gBAA5C,GAA+D,EAN1D,EAOLlB,KAAK,CAACU,IAAN,IAAc,eAAd,GAAgCF,MAAM,CAACM,YAAvC,GAAsD,EAPjD,EAQLd,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACO,WAAtC,GAAoD,EAR/C,CAJT;AAAA,gBAeGf,KAAK,CAACmB;AAfT,MA9BF,EA+CGZ,UAAU,IACT,KAAC,WAAD;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACY,gBADF,EAELpB,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACS,SAApC,GAAgD,EAF3C,EAGLjB,KAAK,CAACU,IAAN,IAAc,aAAd,GAA8BF,MAAM,CAACG,UAArC,GAAkD,EAH7C,EAILX,KAAK,CAACU,IAAN,IAAc,YAAd,GAA6BF,MAAM,CAACI,SAApC,GAAgD,EAJ3C,EAKLZ,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACK,WAAtC,GAAoD,EAL/C,EAMLb,KAAK,CAACU,IAAN,IAAc,oBAAd,GAAqCF,MAAM,CAACU,gBAA5C,GAA+D,EAN1D,EAOLlB,KAAK,CAACU,IAAN,IAAc,eAAd,GAAgCF,MAAM,CAACM,YAAvC,GAAsD,EAPjD,EAQLd,KAAK,CAACU,IAAN,IAAc,cAAd,GAA+BF,MAAM,CAACO,WAAtC,GAAoD,EAR/C;AAHT,MAhDJ;AAAA,IADF;AAkED,CA/EM;AAiFP,IAAMP,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,MAAM,EAAEC,UAAU,CAACC,aADV;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,aAAa,EAAE,KAJN;AAKTC,IAAAA,cAAc,EAAE,QALP;AAMTC,IAAAA,UAAU,EAAE,QANH;AAOTC,IAAAA,WAAW,EAAE,CAPJ;AAQTC,IAAAA,WAAW,EAAE,OARJ;AASTC,IAAAA,YAAY,EAAET,UAAU,CAACC;AAThB,GADoB;AAY/BN,EAAAA,UAAU,EAAE;AACVe,IAAAA,UAAU,EAAEC,KAAK,CAACC,gBADR;AAEVC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,gBAFN;AAGVC,IAAAA,SAAS,EAAE;AAHD,GAZmB;AAiB/BvB,EAAAA,eAAe,EAAE;AACfwB,IAAAA,WAAW,EAAE,CADE;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAjBc;AAqB/BrB,EAAAA,gBAAgB,EAAE;AAChBsB,IAAAA,UAAU,EAAE,CADI;AAEhBD,IAAAA,OAAO,EAAE;AAFO,GArBa;AAyB/B9B,EAAAA,UAAU,EAAE;AACVgC,IAAAA,WAAW,EAAEC,MAAM,CAACC,KADV;AAEVC,IAAAA,eAAe,EAAEF,MAAM,CAACC,KAFd;AAGVE,IAAAA,KAAK,EAAEH,MAAM,CAACI;AAHJ,GAzBmB;AA8B/B/B,EAAAA,SAAS,EAAE;AACT0B,IAAAA,WAAW,EAAEC,MAAM,CAACK,SADX;AAETH,IAAAA,eAAe,EAAEF,MAAM,CAACK,SAFf;AAGTF,IAAAA,KAAK,EAAEH,MAAM,CAACM;AAHL,GA9BoB;AAmC/BtC,EAAAA,SAAS,EAAE;AACT+B,IAAAA,WAAW,EAAEC,MAAM,CAACO,IADX;AAETL,IAAAA,eAAe,EAAEF,MAAM,CAACO,IAFf;AAGTJ,IAAAA,KAAK,EAAEH,MAAM,CAACI;AAHL,GAnCoB;AAwC/BlC,EAAAA,YAAY,EAAE;AACZ6B,IAAAA,WAAW,EAAEC,MAAM,CAACC,KADR;AAEZC,IAAAA,eAAe,EAAE;AAFL,GAxCiB;AA4C/BjC,EAAAA,WAAW,EAAE;AACX8B,IAAAA,WAAW,EAAEC,MAAM,CAACK,SADT;AAEXH,IAAAA,eAAe,EAAE,aAFN;AAGXC,IAAAA,KAAK,EAAEH,MAAM,CAACM;AAHH,GA5CkB;AAiD/BhC,EAAAA,gBAAgB,EAAE;AAChByB,IAAAA,WAAW,EAAEC,MAAM,CAACK,SADJ;AAEhBH,IAAAA,eAAe,EAAE,aAFD;AAGhBC,IAAAA,KAAK,EAAEH,MAAM,CAACK;AAHE,GAjDa;AAsD/BlC,EAAAA,WAAW,EAAE;AACX4B,IAAAA,WAAW,EAAEC,MAAM,CAACO,IADT;AAEXL,IAAAA,eAAe,EAAE,aAFN;AAGXC,IAAAA,KAAK,EAAEH,MAAM,CAACI;AAHH;AAtDkB,CAAlB,CAAf","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { PressableOpacity } from 'react-native-pressable-opacity';\nimport * as Animatable from 'react-native-animatable';\nimport { useFonts } from 'expo-font';\nimport { FontAwesome } from '@expo/vector-icons';\n\nexport const Button = ({ onPress = () => {}, ...props }) => {\n  const [loaded] = useFonts({\n    ObjektivRegular: require('./../../assets/fonts/ObjektivMk2-Regular.ttf'),\n    ObjektivBold: require('./../../assets/fonts/ObjektivMk2-Bold.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  const arrowLeft = props.arrowDirection === 'left';\n  const arrowRight = props.arrowDirection === 'right';\n\n  return (\n    <PressableOpacity\n      activeOpacity={0.5}\n      onPress={onPress}\n      style={[\n        styles.container,\n        props.type == 'solid-green' ? styles.solidGreen : '',\n        props.type == 'solid-green' ? styles.solidGreen : '',\n        props.type == 'solid-gold' ? styles.solidGold : '',\n        props.type == 'outline-blue' ? styles.outlineBlue : '',\n        props.type == 'outline-blue-light' ? styles.outlineBlue : '',\n        props.type == 'outline-green' ? styles.outlineGreen : '',\n        props.type == 'outline-gold' ? styles.outlineGold : '',\n      ]}\n    >\n      {arrowLeft && (\n        <FontAwesome\n          name=\"chevron-left\"\n          size={16}\n          style={[\n            styles.buttonArrowLeft,\n            props.type == 'solid-blue' ? styles.solidBlue : '',\n            props.type == 'solid-green' ? styles.solidGreen : '',\n            props.type == 'solid-gold' ? styles.solidGold : '',\n            props.type == 'outline-blue' ? styles.outlineBlue : '',\n            props.type == 'outline-blue-light' ? styles.outlineBlueLight : '',\n            props.type == 'outline-green' ? styles.outlineGreen : '',\n            props.type == 'outline-gold' ? styles.outlineGold : '',\n          ]}\n        />\n      )}\n      <Animatable.Text\n        animation=\"fadeIn\"\n        delay={200}\n        duration={400}\n        style={[\n          styles.buttonText,\n          props.type == 'solid-blue' ? styles.solidBlue : '',\n          props.type == 'solid-green' ? styles.solidGreen : '',\n          props.type == 'solid-gold' ? styles.solidGold : '',\n          props.type == 'outline-blue' ? styles.outlineBlue : '',\n          props.type == 'outline-blue-light' ? styles.outlineBlueLight : '',\n          props.type == 'outline-green' ? styles.outlineGreen : '',\n          props.type == 'outline-gold' ? styles.outlineGold : '',\n        ]}\n      >\n        {props.buttonText}\n      </Animatable.Text>\n      {arrowRight && (\n        <FontAwesome\n          name=\"chevron-right\"\n          size={14}\n          style={[\n            styles.buttonArrowRight,\n            props.type == 'solid-blue' ? styles.solidBlue : '',\n            props.type == 'solid-green' ? styles.solidGreen : '',\n            props.type == 'solid-gold' ? styles.solidGold : '',\n            props.type == 'outline-blue' ? styles.outlineBlue : '',\n            props.type == 'outline-blue-light' ? styles.outlineBlueLight : '',\n            props.type == 'outline-green' ? styles.outlineGreen : '',\n            props.type == 'outline-gold' ? styles.outlineGold : '',\n          ]}\n        />\n      )}\n    </PressableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: Dimensions.BUTTON_HEIGHT,\n    paddingHorizontal: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: Dimensions.BUTTON_HEIGHT,\n  },\n  buttonText: {\n    fontFamily: Fonts.FONT_FACE_BUTTON,\n    fontSize: Fonts.FONT_SIZE_BUTTON,\n    alignSelf: 'center',\n  },\n  buttonArrowLeft: {\n    marginRight: 7,\n    opacity: 0.5,\n  },\n  buttonArrowRight: {\n    marginLeft: 7,\n    opacity: 0.5,\n  },\n  solidGreen: {\n    borderColor: Colors.GREEN,\n    backgroundColor: Colors.GREEN,\n    color: Colors.NAVY,\n  },\n  solidBlue: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: Colors.HERO_BLUE,\n    color: Colors.WHITE,\n  },\n  solidGold: {\n    borderColor: Colors.GOLD,\n    backgroundColor: Colors.GOLD,\n    color: Colors.NAVY,\n  },\n  outlineGreen: {\n    borderColor: Colors.GREEN,\n    backgroundColor: 'transparent',\n  },\n  outlineBlue: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: 'transparent',\n    color: Colors.WHITE,\n  },\n  outlineBlueLight: {\n    borderColor: Colors.HERO_BLUE,\n    backgroundColor: 'transparent',\n    color: Colors.HERO_BLUE,\n  },\n  outlineGold: {\n    borderColor: Colors.GOLD,\n    backgroundColor: 'transparent',\n    color: Colors.NAVY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}